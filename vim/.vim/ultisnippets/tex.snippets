# Environments (should start on new line)
snippet beg "begin{} / end{}" bA
\begin{$1}
	$2
\end{$1}
endsnippet

snippet enu "enumerate environment" bA
\begin{enumerate}[$1]
	\item $2
\end{enumerate}
endsnippet

snippet itm "itemize environment" bA
\begin{itemize}[$1]
	\item $2
\end{itemize}
endsnippet

snippet cen "center environment" bA
\begin{center}
	$1
\end{center}
endsnippet

snippet mal "align environment" bA
\begin{align*}
	$1
\end{align*}
endsnippet

snippet cas "cases" bA
\begin{cases}
	$1
\end{cases}
endsnippet

snippet thm "theorem" bA
\begin{theorem}[$1]
\label{$1}
	$2
\end{theorem}
endsnippet

snippet crlry "corollary" bA
\begin{corollary}[$1]
\label{$1}
	$2
\end{corollary}
endsnippet

snippet lma "lemma" bA
\begin{lemma}[$1]
\label{$1}
	$2
\end{lemma}
endsnippet

snippet rmk "remark" bA
\begin{remark}
	$1
\end{remark}
endsnippet

snippet dfn "definition" bA
\begin{definition}
	$1
\end{definition}
endsnippet

snippet prf "proof" bA
\begin{quote}
	\begin{proof}
		$1
	\end{proof}
\end{quote}
endsnippet


# In-line "Environments"
snippet mii "inline math" iA
$$1$
endsnippet

snippet ttt "text" iA
\text{$1}
endsnippet


# Fractions
snippet '([^\s]+) / (\d)' "Fraction" wrA
\frac{`!p snip.rv=match.group(1)`} {`!p snip.rv=match.group(2)`}
endsnippet

snippet '([^\s]+) / ' "Fraction" wr
\frac{`!p snip.rv=match.group(1)`} {$1}
endsnippet

snippet // "Fraction" iA
\frac{$1} {$2}
endsnippet

snippet /n "Nice Fraction" iA
\nicefrac{$1} {$2}
endsnippet


# Superscripts / Subscripts
snippet '([A-Za-z])(\d)' "auto single subscript" wrA
`!p snip.rv=match.group(1)`_`!p snip.rv=match.group(2)`
endsnippet

snippet __ "auto subscript" iA
_{$1}
endsnippet

snippet ** "auto superscript" iA
^{$1}
endsnippet

snippet '([^\s]+)\\invs' "inverse" wrA
`!p snip.rv=match.group(1)`^{-1}
endsnippet

snippet '([^\s]+)\\compl' "complement" wrA
`!p snip.rv=match.group(1)`^{c}
endsnippet


# Under / Over Stuff
snippet ubrace "under brace"
\underbrace{${VISUAL}}_\text{$1}
endsnippet

snippet obrace "over brace"
\overbrace{${VISUAL}}_\text{$1}
endsnippet

snippet uset "under brace"
\underset{\text{$1}}{${VISUAL}}
endsnippet

snippet oset "over brace"
\overset{\text{$1}}{${VISUAL}}
endsnippet


# Variable Modifiers (saves braces; allows for suffix declaration)
snippet \hat "hat" wA
\hat{$1}
endsnippet

snippet '([^\s]+)\\hat' "hat" wrA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

snippet \bar "bar" wA
\overline{$1}
endsnippet

snippet '([^\s]+)\\bar' "bar" wrA
\overline{`!p snip.rv=match.group(1)`}
endsnippet


# Delimiters (just saves the braces...)
snippet \abs "absolute value" iA
\abs{$1}
endsnippet

snippet \paren "parentheses" iA
\paren{$1}
endsnippet

snippet \set "set (braces)" iA
\set{$1}
endsnippet

snippet \bracket "brackets" iA
\bracket{$1}
endsnippet

snippet \quotes "quotes" iA
\quotes{$1}
endsnippet


# Set Stuff
snippet \\\ "setminus" iA
\setminus
endsnippet

snippet ccs "subset strict" iA
\subset
endsnippet

snippet cce "subset equal" iA
\subseteq
endsnippet

snippet inn "in " iA
\in
endsnippet

snippet notin "not in " iA
\not\in
endsnippet

snippet emptyset "empty set" iA
\varnothing
endsnippet

snippet nn "intersection" wA
\cap
endsnippet

snippet uu "union" wA
\cup
endsnippet


# Subscript/Superscript Operators
snippet SS "sum" iA
\sum_{${1:i = 1}}^{${2:n}} ${3:a_{i}}
endsnippet

snippet PP "product" iA
\prod_{${1:i = 1}}^{${2:n}} ${3:a_{i}}
endsnippet

snippet UU "bigcup" iA
\bigcup_{${1:i \in ${2: I}}}
endsnippet

snippet NN "bigcap" iA
\bigcap_{${1:i \in ${2: I}}}
endsnippet

snippet dint "integral" iA
\int_{${1:a}}^{${2:b}}
endsnippet


# Black Board Bold
snippet \N "mathbb N" iA
\mathbb{N}
endsnippet

snippet \R "mathbb R" iA
\mathbb{R}
endsnippet

snippet \C "mathbb C" iA
\mathbb{C}
endsnippet

snippet \Q "mathbb Q" iA
\mathbb{Q}
endsnippet

snippet \Z "mathbb Z" iA
\mathbb{Z}
endsnippet


# Misc Symbols
snippet ... "ellipses" iA
\dotsc
endsnippet

snippet ' \* ' "multiplication" wrA
 \cdot 
endsnippet

snippet ' xx ' "cross" wrA
 \times 
endsnippet

snippet \norm "norm" iA
\norm{$1}
endsnippet

snippet <= "leq" iA
\leq
endsnippet

snippet >= "geq" iA
\geq
endsnippet

snippet == "aligned equal" iA
&=
endsnippet

snippet -> "to" iA
\to
endsnippet

snippet !> "mapsto" iA
\mapsto
endsnippet

snippet => "implies" iA
\implies
endsnippet

snippet EEX "exists" iA
\exists
endsnippet

snippet NEX "not exists" iA
\nexists
endsnippet

snippet AAA "forall" iA
\forall
endsnippet

snippet ooo "infty" iA
\infty
endsnippet

snippet >> ">>" iA
\gg
endsnippet

snippet << "<<" iA
\ll
endsnippet

snippet ~~ "~" iA
\sim
endsnippet
